


27
import java.util.*;

public class FourSum {

    public static List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(nums); // Sort the array

        int n = nums.length;
        for (int i = 0; i < n - 3; i++) {
            // Avoid duplicates for the first number
            if (i > 0 && nums[i] == nums[i - 1]) continue;

            for (int j = i + 1; j < n - 2; j++) {
                // Avoid duplicates for the second number
                if (j > i + 1 && nums[j] == nums[j - 1]) continue;

                int left = j + 1;
                int right = n - 1;

                while (left < right) {
                    long sum = (long) nums[i] + nums[j] + nums[left] + nums[right];

                    if (sum == target) {
                        result.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));

                        // Avoid duplicates
                        while (left < right && nums[left] == nums[left + 1]) left++;
                        while (left < right && nums[right] == nums[right - 1]) right--;

                        left++;
                        right--;
                    } else if (sum < target) {
                        left++;
                    } else {
                        right--;
                    }
                }
            }
        }
        return result;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input array size
        System.out.print("Enter number of elements: ");
        int n = scanner.nextInt();
        int[] nums = new int[n];

        // Input array elements
        System.out.println("Enter " + n + " integers:");
        for (int i = 0; i < n; i++) {
            nums[i] = scanner.nextInt();
        }

        // Input target value
        System.out.print("Enter target sum: ");
        int target = scanner.nextInt();

        // Find and print all quadruplets
        List<List<Integer>> result = fourSum(nums, target);

        if (result.isEmpty()) {
            System.out.println("No quadruplets found.");
        } else {
            System.out.println("Quadruplets that sum to " + target + ":");
            for (List<Integer> quad : result) {
                System.out.println(quad);
            }
        }
    }
}


import java.util.*;

public class DeleteMiddleOfStack {

    // Function to delete the middle element
    public static void deleteMiddle(Stack<Integer> stack, int current, int size) {
        if (stack.isEmpty() || current == size / 2) {
            stack.pop(); // Remove the middle element
            return;
        }

        int temp = stack.pop();
        deleteMiddle(stack, current + 1, size);
        stack.push(temp); // Push elements back after middle is removed
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Stack<Integer> stack = new Stack<>();

        // Dynamic input
        System.out.print("Enter number of elements in stack: ");
        int n = scanner.nextInt();

        System.out.println("Enter " + n + " elements (top to bottom):");
        for (int i = 0; i < n; i++) {
            stack.push(scanner.nextInt());
        }

        System.out.println("Original stack: " + stack);

        deleteMiddle(stack, 0, n);

        System.out.println("Stack after deleting middle element: " + stack);
    }
}