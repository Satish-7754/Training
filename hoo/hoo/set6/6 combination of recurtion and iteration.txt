//Set6: SearchInLinkedList
import java.util.Scanner;
class Node {
    int data;
    Node next;
    Node(int data) {
        this.data = data;
        this.next = null;
    }
}
class SearchInLinkedList {
    static Node head = null;
    public static void insert(int val) {
        Node newNode = new Node(val);
        if (head == null) {
            head = newNode;
        } else {
            Node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }
    public static boolean iterativeSearch(Node head, int target) {
        Node current = head;
        while (current != null) {
            if (current.data == target) {
                return true;
            }
            current = current.next;
        }
        return false;
    }
    public static boolean recursiveSearch(Node head, int target) {
        if (head == null) {
            return false;
        }
        if (head.data == target) {
            return true;
        }
        return recursiveSearch(head.next, target);
    }
    public static void printList(Node head) {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter number of elements in the linked list: ");
        int n = scanner.nextInt();
        System.out.println("Enter elements:");
        for (int i = 0; i < n; i++) {
            insert(scanner.nextInt());
        }
        System.out.print("Enter the element to search for: ");
        int target = scanner.nextInt();
boolean iterativeResult = iterativeSearch(head, target);
boolean recursiveResult = recursiveSearch(head, target);
if (iterativeResult) {
            System.out.println("Element " + target + " found using iteration.");
        } else {
            System.out.println("Element " + target + " not found using iteration.");
        }
     if (recursiveResult) {
            System.out.println("Element " + target + " found using recursion.");
        } else {
            System.out.println("Element " + target + " not found using recursion.");
        }
    }
}
