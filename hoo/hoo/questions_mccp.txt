1a) Implement Queue using Stacks  
1b) Find Minimum in Rotated Sorted Array 

 
2a) Count Pairs in All Rotations  
2b) Implement Stack using Queues  


3a) Remove Duplicates from Sorted Linked List  
3b) Search in Rotated Sorted Array  


4a) Remove Nth Node From End of List  
4b) Find Ceiling and Floor in Array  


5a) Find Single Element in Sorted Array  
5b) Reverse Linked List


6a) Two Sum  
6b) Search in Linked List  


7a) Remove Duplicates from Array  
7b) Reverse Queue  


8a) Remove Consecutive Duplicates from String  
8b) Sort Stack  


9a) Find Equilibrium Index  
9b) Diameter of Binary Search Tree  


10a) Mirror Binary Search Tree


11a) Minimum Cost to Connect Ropes  
11b) Remove Half Nodes from BST  


12a) Print Left Nodes of BST  
12b) Product of Array Except Self  


13a) Assign Cookies  
13b) Width of BST at Given Level  


14a) Lemonade Change  
14b) Height of BST  


15a) Maximum Equal Sum of Three Stacks  
15b) Maximum Width of BST


16a) Reverse Level Order Traversal in BST  
16b) 0/1 Knapsack Problem  


17a) Count All Root-to-Leaf Paths in Binary Tree  
17b) Breadth First Traversal of BST  


18a) Kadane's Algorithm  
18b) Inorder, Preorder, Postorder Traversals  


19a) Reverse String Using Two Pointers  
19b) Implement Two Stacks in One Array  


20a) Find Triplet with Sum Equal to Third Number  
20b) Depth First Search Using Adjacency List (Non-Recursive)  


21a) Distribute Candies Based on Rankings
21b) Depth First Search (Recursive)  


22a) Climbing Stairs with 1, 2, or 3 Steps  
22b) Depth First Search (Recursive)  


23a) Longest Common Subsequence  
23b) Depth First Search (Recursive)  


24a) 3Sum  
24b) Breadth First Search (Adjacency Matrix)  


25a) Minimum Platforms for Trains  
25b) Breadth First Search (Adjacency List)  


26a) Merge Two Strings Alternately  
26b) Check Balanced Parentheses  


27a) 4Sum
27b) Delete Middle Element of Stack  


28a) Find Maximum in Queue  
28b) Implement Stack Using Queues  


29a) Unique Paths with Obstacles  
29b) Reverse Queue  


30a) Remove Duplicates from Array  
30b) Min Stack  


31a) Find Missing Term in Geometric Sequence  
31b) Min Stack (Single Stack)  


32) A) Intersection of two arrays in log n time complexity
32) B) Find a string is palindrome or not using stack and queue


33a) ArrayIntersection
33b) PalindromeCheck


34a) Ternary Search  
34b) Check if Linked List is Palindrome


35a) Squares of a Sorted Array  
35b) Remove Nth Node From End of List  


36a) Sort Array by Parity  
36b) Diameter of Binary Search Tree


37a) Longest Increasing Subsequence  
37b) Longest Common Prefix Using Trie 


38a) SubstringCount
38b) BitonicSubsequence


39a) LongestDecreasingSubsequence
39b) StringSortByFrequency
 

40a) Basic Stock Buying and Selling (Conceptual)
40b) Count Half Nodes in a Binary Search Tree (BST)


41a) Best Time to Buy and Sell Stock  
41b) Count Half Nodes in BST


